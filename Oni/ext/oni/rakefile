# require 'rake/testtask'
# require 'rake/clean'
# require 'open3'


# o_files Dir
# task 'libOniBase' => o_files do
# end




# make the :test task depend on the shared
# object, so it will be built automatically
# before running the tests

# rule to build the extension: this says
# that the extension should be rebuilt
# after any change to the files in ext

c_library = "lib/#{NAME}/#{NAME}.so"

source_files = Array.new
source_files += Dir.glob("ext/#{NAME}/*{.rb,.c}")
source_files += ["ext/#{NAME}/extconf.rb"]

source_files += Dir.glob("ext/#{NAME}/cpp/cpp_core/*{.cpp,.h}")
source_files += Dir.glob("ext/#{NAME}/cpp/cpp_interface/*{.cpp,.h}")

file c_library => source_files do
	Dir.chdir("ext/#{NAME}") do
		# this does essentially the same thing
		# as what RubyGems does
		ruby "extconf.rb"
		
		# Run make
		flags = ""
		stdin, stdout_and_stderr, wait_thr = Open3.popen2e "make " + flags
		
		output = nil
		begin
			output = stdout_and_stderr.gets
			puts output
		end while output
		
		stdin.close
		stdout_and_stderr.close
	end
	
	cp "ext/#{NAME}/#{NAME}.so", "lib/#{NAME}"
end

task :test => c_library

task :package => c_library do
	`gem build oni.gemspec`
end


# use 'rake clean' and 'rake clobber' to
# easily delete generated files
CLEAN.include('ext/**/*{.o,.log,.so}')
# CLEAN.include('ext/**/Makefile')
CLOBBER.include('lib/**/*.so')

desc "Run tests"
# task :default => [:test, :package]

namespace :windows do
	task :package => :default do
		`gem build oni_win_precompiled.gemspec`		
	end
	
	task :release => Rake::Task['windows:package'] do
		
	end
end
